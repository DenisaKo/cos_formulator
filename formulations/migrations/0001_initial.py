# Generated by Django 5.2.3 on 2025-06-21 17:37

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Brand name of the ingredient (e.g., Emulsifying Wax NF)', max_length=200, unique=True)),
                ('inci_name', models.CharField(help_text='INCI name', max_length=255)),
                ('functionality', models.CharField(blank=True, help_text='Primary function (e.g., Emulsifier, Humectant, Preservative)', max_length=255, null=True)),
                ('solubility', models.CharField(blank=True, choices=[('water', 'Water Soluble'), ('oil', 'Oil Soluble'), ('dispersible', 'Water Dispersible'), ('other', 'Other')], help_text='Solubility in water or oil.', max_length=50, null=True)),
                ('physical_state', models.CharField(blank=True, choices=[('liquid', 'Liquid'), ('powder', 'Powder'), ('pellets', 'Pellets'), ('paste', 'Paste')], help_text='Physical state under normal conditions.', max_length=50, null=True)),
                ('recommended_concentration', models.CharField(blank=True, help_text="Typical usage percentage range (e.g., '0.5-5%', '10-20%')", max_length=100, null=True)),
                ('notes', models.TextField(blank=True, help_text='Any additional notes or warnings about the ingredient', null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Formulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of the formulation (e.g., 'Hydrating Face Cream')", max_length=255)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the formulation', null=True)),
                ('batch_size_grams', models.DecimalField(blank=True, decimal_places=2, default=100, help_text='Optional: Target batch size in grams', max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the formulation was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the formulation was last updated')),
                ('user', models.ForeignKey(help_text='The user who created this formulation', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FormulationIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.DecimalField(decimal_places=2, help_text='Percentage of this ingredient in the formula (e.g., 5.00 for 5%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('instructions', models.TextField(blank=True, help_text='Step-by-step instructions for ingredient addition', null=True)),
                ('order', models.IntegerField(default=0, help_text='The order in which to display an ingredient.', validators=[django.core.validators.MinValueValidator(0)])),
                ('formulation', models.ForeignKey(help_text='The formulation this ingredient belongs to', on_delete=django.db.models.deletion.CASCADE, to='formulations.formulation')),
                ('ingredient', models.ForeignKey(help_text='The ingredient in this formulation', on_delete=django.db.models.deletion.CASCADE, to='formulations.ingredient')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='formulation',
            name='ingredients',
            field=models.ManyToManyField(through='formulations.FormulationIngredient', to='formulations.ingredient'),
        ),
        migrations.AlterUniqueTogether(
            name='formulation',
            unique_together={('user', 'name')},
        ),
    ]
